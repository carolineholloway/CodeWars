{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14820\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs21 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #Function to convert a sequence of characters into a list containing the same characters, but no repetition of sequential characters\
\
def unique_in_order(iterable):\
    new_lst = []\
    
\f1\i #append to new_list if index figure is not already in new_lst
\f0\i0 \
    for i in range(len(iterable)):\
        if iterable[i] not in new_lst:\
            new_lst.append(iterable[i])\
        
\f1\i #if figure is in list, append if not equal the the figure appended 1 turn previously
\f0\i0 \
        else:\
            if iterable[i] != iterable[i-1]:\
                new_lst.append(iterable[i])\
    return new_lst\
}